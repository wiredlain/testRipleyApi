{"version":3,"sources":["../../src/utils/logger.js"],"names":["options","error","level","filename","appRoot","handleExceptions","json","maxsize","maxFiles","colorize","console","logger","winston","createLogger","transports","Console","File","exitOnError","stream","write","message","encoding","info","module","exports"],"mappings":";;AAAA;;;;AACA;;;;;;AAEA;AACA,IAAIA,UAAU;AACZC,SAAO;AACLC,WAAO,OADF;AAELC,cAAaC,qBAAb,oBAFK;AAGLC,sBAAkB,IAHb;AAILC,UAAM,IAJD;AAKLC,aAAS,OALJ,EAKa;AAClBC,cAAU,CANL;AAOLC,cAAU;AAPL,GADK;AAUZC,WAAS;AACPR,WAAO,OADA;AAEPG,sBAAkB,IAFX;AAGPC,UAAM,KAHC;AAIPG,cAAU;AAJH;AAVG,CAAd;;AAkBA;AACA,IAAIE,SAASC,kBAAQC,YAAR,CAAqB;AAC9BC,cAAY,CACV,IAAKF,kBAAQE,UAAR,CAAmBC,OAAxB,CAAiCf,QAAQU,OAAzC,CADU,EAEV,IAAKE,kBAAQE,UAAR,CAAmBE,IAAxB,CAA8BhB,QAAQC,KAAtC,CAFU,CADkB;AAK9BgB,eAAa,KALiB,CAKV;AALU,CAArB,CAAb;;AAQA;AACAN,OAAOO,MAAP,GAAgB;AACdC,SAAO,eAASC,OAAT,EAAkBC,QAAlB,EAA4B;AACjC;AACAV,WAAOW,IAAP,CAAYF,OAAZ;AACD;AAJa,CAAhB;;AAOAG,OAAOC,OAAP,GAAiBb,MAAjB","file":"logger.js","sourcesContent":["import appRoot from 'app-root-path';\nimport winston from 'winston';\n\n// define the custom settings for each transport (file, console)\nvar options = {\n  error: {\n    level: 'error',\n    filename: `${appRoot}/logs/error.log`,\n    handleExceptions: true,\n    json: true,\n    maxsize: 5242880, // 5MB\n    maxFiles: 5,\n    colorize: true,\n  },\n  console: {\n    level: 'debug',\n    handleExceptions: true,\n    json: false,\n    colorize: true,\n  },\n};\n\n// instantiate a new Winston Logger with the settings defined above\nlet logger = winston.createLogger({\n    transports: [\n      new (winston.transports.Console)(options.console),\n      new (winston.transports.File)(options.error)\n    ],\n    exitOnError: false, // do not exit on handled exceptions\n  });\n\n// create a stream object with a 'write' function that will be used by `morgan`\nlogger.stream = {\n  write: function(message, encoding) {\n    // use the 'info' log level so the output will be picked up by both transports (file and console)\n    logger.info(message);\n  },\n};\n\nmodule.exports = logger;"]}