{"version":3,"sources":["../../src/routes/products.js"],"names":["router","get","requiresLogin","requiresAuth","req","res","next","skus","params","trim","skusKey","client","err","result","resultJSON","JSON","parse","status","json","productService","getProducts","then","data","responseJSON","setex","stringify","forEach","item","skuKey","partNumber","toLocaleLowerCase","catch","console","log","message","response","error"],"mappings":";;;;;;AAAA;;AACA;;;;AACA;;AACA;;;;;;AACA,IAAIA,SAAS,sBAAb;;AAEA;AACAA,OAAOC,GAAP,CAAW,QAAX,EAAqBC,6BAAcC,YAAnC,EAAiD,OAAMC,GAAN,EAAWC,GAAX,EAAgBC,IAAhB,KAAyB;AACxE,QAAMC,OAAQH,IAAII,MAAJ,CAAWD,IAAZ,CAAkBE,IAAlB,EAAb;;AAEA,QAAMC,UAAW,QAAOH,IAAK,EAA7B;;AAEAI,cAAOV,GAAP,CAAWS,OAAX,EAAoB,CAACE,GAAD,EAAMC,MAAN,KAAiB;AACnC,QAAIA,MAAJ,EAAY;AACV,YAAMC,aAAaC,KAAKC,KAAL,CAAWH,MAAX,CAAnB;AACA,aAAOR,IAAIY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBJ,UAArB,CAAP;AACD,KAHD,MAIK;AACHK,gCAAeC,WAAf,CAA2Bb,IAA3B,EAAiCc,IAAjC,CAAuCC,IAAD,IAAU;AAC9C,cAAMC,eAAeD,IAArB;AACAX,oBAAOa,KAAP,CAAad,OAAb,EAAsB,GAAtB,EAA2BK,KAAKU,SAAL,CAAeF,YAAf,CAA3B;AACAA,qBAAaG,OAAb,CAAqBC,QAAQ;AAC3B,gBAAMC,SAAU,OAAMD,KAAKE,UAAL,CAAgBC,iBAAhB,EAAoC,EAA1D;AACAnB,sBAAOa,KAAP,CAAaI,MAAb,EAAqB,GAArB,EAA0BD,IAA1B;AACD,SAHD;AAIA,eAAOtB,IAAIY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBK,YAArB,CAAP;AACD,OARD,EAQGQ,KARH,CAQSnB,OAAO;AACdoB,gBAAQC,GAAR,CAAYrB,IAAIsB,OAAhB;;AAEA,eAAO7B,IAAIY,MAAJ,CAAWL,IAAIuB,QAAJ,CAAalB,MAAb,IAAuB,GAAlC,EAAuCC,IAAvC,CAA4C,EAACkB,OAAOxB,IAAIsB,OAAZ,EAA5C,CAAP;AACD,OAZD;AAaD;AACF,GApBD;AAqBA;AACD,CA3BD;;kBA6BelC,M","file":"products.js","sourcesContent":["import { Router } from 'express';\nimport productService from '../services/productServices'\nimport { client } from '../app';\nimport requiresLogin from '../authentication/firebase-middleware';\nlet router = Router();\n\n/* GET users listing. */\nrouter.get('/:skus', requiresLogin.requiresAuth, async(req, res, next) => {\n  const skus = (req.params.skus).trim();\n\n  const skusKey = `SKUS:${skus}`;\n\n  client.get(skusKey, (err, result) => {\n    if (result) {\n      const resultJSON = JSON.parse(result);\n      return res.status(200).json(resultJSON);\n    }\n    else {\n      productService.getProducts(skus).then((data) => {\n        const responseJSON = data;\n        client.setex(skusKey, 120, JSON.stringify(responseJSON));\n        responseJSON.forEach(item => {\n          const skuKey = `SKU:${item.partNumber.toLocaleLowerCase()}`;\n          client.setex(skuKey, 120, item);\n        });\n        return res.status(200).json(responseJSON);\n      }).catch(err => {\n        console.log(err.message);\n\n        return res.status(err.response.status || 404).json({error: err.message});\n      });\n    }\n  });\n  //res.send('respuesta de productos');\n});\n\nexport default router;\n"]}