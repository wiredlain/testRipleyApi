{"version":3,"sources":["../src/app.js"],"names":["router","app","LoggerMiddleware","req","res","next","random","Math","floor","originalUrl","indexOf","errorMessage","logger","error","method","ip","status","err","set","__dirname","use","debug","stream","winston","write","bodyParser","urlencoded","extended","json","express","static","indexRouter","productsRouter","landingRouter","locals","message","get","render"],"mappings":"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","sourcesContent":["import express, { Router, urlencoded } from 'express';\nimport bodyParser from 'body-parser';\nimport cors from 'cors';\nimport helmet from 'helmet';\nimport { config } from 'dotenv';\nimport redis from 'redis';\nimport bluebird from 'bluebird';\nimport logger from './utils/logger';\nimport winston from 'winston';\n\nconfig();\n\nconst router = Router();\n//import { firebase } from './authentication/firebase';\nimport { join } from 'path';\nimport cookieParser from 'cookie-parser';\nimport morgan from 'morgan';\n\nimport indexRouter from './routes/index';\nimport productsRouter from './routes/products';\nimport landingRouter from './routes/landing';\n\n\n//bluebird.promisifyAll(redis.RedisClient.prototype);\n//bluebird.promisifyAll(redis.Multi.prototype);\n\nconst app = express();\n\nconst LoggerMiddleware = (req,res,next) => {\n\n  const random = Math.floor(Math.random() * 100) + 1;\n  const { originalUrl } = req;\n  if (random < 15 && (originalUrl.indexOf('login') === -1)) {\n    let errorMessage = `Error Code: 500\\nMessage: error simulado`;\n    logger.error(`500 - ${errorMessage} - ${req.originalUrl} - ${req.method} - ${req.ip}`);\n    res.status(err.status || 500);\n  }\n\n  next();\n};\n\n//app.use(LoggerMiddleware);\n\n//const REDIS_URL = process.env.REDIS_URL;\n//export const client = redis.createClient(REDIS_URL)\n\n// view engine setup\napp.set('views', join(__dirname, '../src/views'));\napp.set('view engine', 'pug');\n\napp.use(cors());\napp.use(helmet());\n\nlogger.debug(\"Overriding 'Express' logger\");\napp.use(morgan('combined', { stream: winston.stream.write }));\n\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(bodyParser.json());\napp.use(urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(express.static(join(__dirname, 'public')));\n\nrouter.use('/', indexRouter);\nrouter.use('/getProductDetailsJson', productsRouter);\nrouter.use('/landings', landingRouter);\n\napp.use('/api', router);\n\n// error handler\napp.use(function (err, req, res, next) {\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\n  // Escribimos el error\n  logger.error(`${err.status || 500} - ${err.message} - ${req.originalUrl} - ${req.method} - ${req.ip}`);\n\n  res.status(err.status || 500);\n  res.render('error');\n  });\n\nexport default app;\n"],"file":"app.js"}